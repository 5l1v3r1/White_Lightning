How I setup my White Lightning server

---

Deploy Kali Linux Instance via Amazon EC2

apt-get update
apt-get -y -q upgrade --fix-missing
apt-get -y -q dist-upgrade --fix-missing

echo deb http://repo.kali.org/kali kali-bleeding-edge main >> /etc/apt/sources.list
apt-get -y -q upgrade --fix-missing
apt-get -y -q dist-upgrade --fix-missing

apt-get install kali-linux-full

mysecretpassword

apt-get install php5-dev php-pear build-essential
pecl install channel://pecl.php.net/msgpack-0.5.5
echo "extension=msgpack.so" >> /etc/php5/apache2/php.ini
apt-get install curl libcurl3 libcurl3-dev php5-curl
update-rc.d postgresql enable
service postgresql start
update-rc.d metasploit enable
service metasploit start
update-rc.d apache2 enable
service apache2 restart

update-rc.d mysql enable
service mysql restart

mysql -u root -p

--- START mysql> ---

use mysql;
update user set password=PASSWORD("mysecretpassword") where User='root';
flush privileges;
quit

--- END mysql> ---

mysql -u root -p

--- START mysql> ---

CREATE DATABASE WL;
CREATE USER 'hobbyhorse'@'localhost' IDENTIFIED BY 'mysecretpassword';
GRANT ALL ON WL.* TO 'hobbyhorse'@'localhost';
quit

--- END mysql> ---


mysql -u hobbyhorse -p

--- START mysql> ---

USE WL;

DROP TABLE users;
CREATE TABLE users (
user_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
name VARCHAR(40) NOT NULL,
pass CHAR(40) NOT NULL,
user_level TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
PRIMARY KEY (user_id),
INDEX login (pass)
);

INSERT INTO users (name, pass) VALUES ('gator', SHA1('P@ssw0rd!'));
UPDATE users SET user_level=1 WHERE name='gator';

INSERT INTO users (name, pass) VALUES ('bear', SHA1('P@ssw0rd!'));

DROP TABLE users_invites;
CREATE TABLE users_invites (
user_invite_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
user_id INT UNSIGNED NOT NULL,
invite_id INT UNSIGNED NOT NULL,
PRIMARY KEY (user_invite_id)
);

DROP TABLE invites;
CREATE TABLE invites (
invite_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
invite VARCHAR(32) NOT NULL,
active TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
PRIMARY KEY (invite_id)
);

DROP TABLE hits;
CREATE TABLE hits (
hit_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
php_date VARCHAR(8) NOT NULL,
php_time VARCHAR(8) NOT NULL,
php_remote_addr VARCHAR(20) NOT NULL,
php_http_referer VARCHAR(2048) NOT NULL,
php_http_user_agent VARCHAR(2048),
ua_os_family VARCHAR(20),
ua_os_version VARCHAR(20),
ua_os_platform VARCHAR(20),
ua_browser_wow64 VARCHAR(20),
ua_browser_name VARCHAR(20),
ua_browser_version VARCHAR(20),
pd_os VARCHAR(20),
pd_br VARCHAR(40),
pd_br_ver VARCHAR(20),
pd_br_ver_full VARCHAR(40),
me_mshtml_build VARCHAR(20),
be_office VARCHAR(20),
pd_reader VARCHAR(20),
pd_flash VARCHAR(20),
pd_java VARCHAR(20),
pd_qt VARCHAR(20),
pd_rp VARCHAR(20),
pd_shock VARCHAR(20),
pd_silver VARCHAR(20),
pd_wmp VARCHAR(20),
pd_vlc VARCHAR(20),
PRIMARY KEY (hit_id)
);


DROP TABLE taskings;
CREATE TABLE taskings (
tasking_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
name VARCHAR(200),
date VARCHAR(8) NOT NULL,
time VARCHAR(8) NOT NULL,
random_string VARCHAR(200),
throw_count VARCHAR(8),
frontend_url VARCHAR(2048),
backend_url VARCHAR(2048),
iframe_flag VARCHAR(200),
iframe_url VARCHAR(2048),
iframe_title VARCHAR(2048),
iframe_icon_url VARCHAR(2048),
debug_flag VARCHAR(200),
PRIMARY KEY (tasking_id)
);

DROP TABLE throws;
CREATE TABLE throws (
throw_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
hit_id INT UNSIGNED,
php_date VARCHAR(8),
php_time VARCHAR(8),
msf_exploit_full_path VARCHAR(2048),
msf_target VARCHAR(8),
PRIMARY KEY (throw_id)
);

DROP TABLE loads;
CREATE TABLE loads (
load_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
throw_id INT UNSIGNED,
php_date VARCHAR(8),
php_time VARCHAR(8),
php_remote_addr VARCHAR(20),
php_http_referer VARCHAR(2048),
php_http_user_agent VARCHAR(2048),
PRIMARY KEY (load_id)
);

show tables;

--- END mysql> ---

--- START ---

ln -s /etc/apache2/mods-available/proxy.load /etc/apache2/mods-enabled
ln -s /etc/apache2/mods-available/proxy_http.load /etc/apache2/mods-enabled

ln -s /etc/apache2/sites-available/qu.gs /etc/apache2/sites-enabled/001-qu.gs
ln -s /etc/apache2/sites-available/www.qu.gs /etc/apache2/sites-enabled/002-www.qu.gs
ln -s /etc/apache2/sites-available/blog.qu.gs /etc/apache2/sites-enabled/003-blog.qu.gs

vi /etc/apache2/ports.conf

--- START ---

#NameVirtualHost *:80
NameVirtualHost *

--- END ---

chown -R www-data:www-data /var/www

chmod -R g+rw /var/www


vi /etc/apache2/apache2.conf

--- START ---

DefaultType application/x-httpd-php

--- END ---


### Domain Change ###


How I setup a new domain for my White Lightning server...

---

cd /var/

vi mysqli_connect.php

--- START ---

DEFINE ('DB_PASSWORD', 'mysecretpassword');

--- END ---


vi /root/msgrpc.rb

--- START ---

load msgrpc ServerHost=qu.gs Pass=abc123

--- END ---

screen -L -S msgrpc

msfconsole -r msgrpc.rb

--- detach: control + a -> d


touch /var/www/e/debug.log
chmod 777 //var/www/e/debug.log


vi /var/www/e/pam-i.php

--- START ---

define ('WL_DOMAIN', 'qu.gs'); /* <?php echo EXPLOIT_DOMAIN ?> */

--- END ---


cd /var/www/m/includes

vi config.inc.php

--- START ---

define ('BASE_URL', 'http://qu.gs/m/');

--- END ---

###




